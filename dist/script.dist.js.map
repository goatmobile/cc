{
  "version": 3,
  "sources": ["../../node_modules/canvas/lib/parse-font.js", "../../node_modules/canvas/browser.js", "../../node_modules/resemblejs/resemble.js", "../../node_modules/resemblejs/compareImages.js", "../../node_modules/preact/src/util.js", "../../node_modules/preact/src/options.js", "../../node_modules/preact/src/create-element.js", "../../node_modules/preact/src/component.js", "../../node_modules/preact/src/create-context.js", "../../node_modules/preact/src/constants.js", "../../node_modules/preact/src/diff/children.js", "../../node_modules/preact/src/diff/props.js", "../../node_modules/preact/src/diff/index.js", "../../node_modules/preact/src/render.js", "../../node_modules/preact/src/clone-element.js", "../../node_modules/preact/src/diff/catch-error.js", "../../js/script.jsx"],
  "sourcesContent": ["'use strict'\n\n/**\n * Font RegExp helpers.\n */\n\nconst weights = 'bold|bolder|lighter|[1-9]00'\nconst styles = 'italic|oblique'\nconst variants = 'small-caps'\nconst stretches = 'ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded'\nconst units = 'px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q'\nconst string = '\\'([^\\']+)\\'|\"([^\"]+)\"|[\\\\w\\\\s-]+'\n\n// [ [ <\u2018font-style\u2019> || <font-variant-css21> || <\u2018font-weight\u2019> || <\u2018font-stretch\u2019> ]?\n//    <\u2018font-size\u2019> [ / <\u2018line-height\u2019> ]? <\u2018font-family\u2019> ]\n// https://drafts.csswg.org/css-fonts-3/#font-prop\nconst weightRe = new RegExp(`(${weights}) +`, 'i')\nconst styleRe = new RegExp(`(${styles}) +`, 'i')\nconst variantRe = new RegExp(`(${variants}) +`, 'i')\nconst stretchRe = new RegExp(`(${stretches}) +`, 'i')\nconst sizeFamilyRe = new RegExp(\n  `([\\\\d\\\\.]+)(${units}) *((?:${string})( *, *(?:${string}))*)`)\n\n/**\n * Cache font parsing.\n */\n\nconst cache = {}\n\nconst defaultHeight = 16 // pt, common browser default\n\n/**\n * Parse font `str`.\n *\n * @param {String} str\n * @return {Object} Parsed font. `size` is in device units. `unit` is the unit\n *   appearing in the input string.\n * @api private\n */\n\nmodule.exports = str => {\n  // Cached\n  if (cache[str]) return cache[str]\n\n  // Try for required properties first.\n  const sizeFamily = sizeFamilyRe.exec(str)\n  if (!sizeFamily) return // invalid\n\n  // Default values and required properties\n  const font = {\n    weight: 'normal',\n    style: 'normal',\n    stretch: 'normal',\n    variant: 'normal',\n    size: parseFloat(sizeFamily[1]),\n    unit: sizeFamily[2],\n    family: sizeFamily[3].replace(/[\"']/g, '').replace(/ *, */g, ',')\n  }\n\n  // Optional, unordered properties.\n  let weight, style, variant, stretch\n  // Stop search at `sizeFamily.index`\n  const substr = str.substring(0, sizeFamily.index)\n  if ((weight = weightRe.exec(substr))) font.weight = weight[1]\n  if ((style = styleRe.exec(substr))) font.style = style[1]\n  if ((variant = variantRe.exec(substr))) font.variant = variant[1]\n  if ((stretch = stretchRe.exec(substr))) font.stretch = stretch[1]\n\n  // Convert to device units. (`font.unit` is the original unit)\n  // TODO: ch, ex\n  switch (font.unit) {\n    case 'pt':\n      font.size /= 0.75\n      break\n    case 'pc':\n      font.size *= 16\n      break\n    case 'in':\n      font.size *= 96\n      break\n    case 'cm':\n      font.size *= 96.0 / 2.54\n      break\n    case 'mm':\n      font.size *= 96.0 / 25.4\n      break\n    case '%':\n      // TODO disabled because existing unit tests assume 100\n      // font.size *= defaultHeight / 100 / 0.75\n      break\n    case 'em':\n    case 'rem':\n      font.size *= defaultHeight / 0.75\n      break\n    case 'q':\n      font.size *= 96 / 25.4 / 4\n      break\n  }\n\n  return (cache[str] = font)\n}\n", "/* globals document, ImageData */\n\nconst parseFont = require('./lib/parse-font')\n\nexports.parseFont = parseFont\n\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), { width: width, height: height })\n}\n\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0: return new ImageData()\n    case 1: return new ImageData(array)\n    case 2: return new ImageData(array, width)\n    default: return new ImageData(array, width, height)\n  }\n}\n\nexports.loadImage = function (src, options) {\n  return new Promise(function (resolve, reject) {\n    const image = Object.assign(document.createElement('img'), options)\n\n    function cleanup () {\n      image.onload = null\n      image.onerror = null\n    }\n\n    image.onload = function () { cleanup(); resolve(image) }\n    image.onerror = function () { cleanup(); reject(new Error('Failed to load the image \"' + src + '\"')) }\n\n    image.src = src\n  })\n}\n", "/*\nJames Cryer / Huddle\nURL: https://github.com/Huddle/Resemble.js\n*/\n\nvar naiveFallback = function () {\n    // ISC (c) 2011-2019 https://github.com/medikoo/es5-ext/blob/master/global.js\n    if (typeof self === \"object\" && self) {\n        return self;\n    }\n    if (typeof window === \"object\" && window) {\n        return window;\n    }\n    throw new Error(\"Unable to resolve global `this`\");\n};\n\nvar getGlobalThis = function () {\n    // ISC (c) 2011-2019 https://github.com/medikoo/es5-ext/blob/master/global.js\n    // Fallback to standard globalThis if available\n    if (typeof globalThis === \"object\" && globalThis) {\n        return globalThis;\n    }\n\n    try {\n        Object.defineProperty(Object.prototype, \"__global__\", {\n            get: function () {\n                return this;\n            },\n            configurable: true\n        });\n    } catch (error) {\n        return naiveFallback();\n    }\n    try {\n        // eslint-disable-next-line no-undef\n        if (!__global__) {\n            return naiveFallback();\n        }\n        return __global__; // eslint-disable-line no-undef\n    } finally {\n        delete Object.prototype.__global__;\n    }\n};\n\nvar isNode = function () {\n    const globalPolyfill = getGlobalThis();\n    return typeof globalPolyfill.process !== \"undefined\" && globalPolyfill.process.versions && globalPolyfill.process.versions.node;\n};\n\n(function (root, factory) {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define([], factory);\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory();\n    } else {\n        root.resemble = factory();\n    }\n})(this /* eslint-disable-line no-invalid-this*/, function () {\n    \"use strict\";\n\n    var Img;\n    var Canvas;\n    var loadNodeCanvasImage;\n\n    if (isNode()) {\n        Canvas = require(\"canvas\"); // eslint-disable-line global-require\n        Img = Canvas.Image;\n        loadNodeCanvasImage = Canvas.loadImage;\n    } else {\n        Img = Image;\n    }\n\n    function createCanvas(width, height) {\n        if (isNode()) {\n            return Canvas.createCanvas(width, height);\n        }\n\n        var cnvs = document.createElement(\"canvas\");\n        cnvs.width = width;\n        cnvs.height = height;\n        return cnvs;\n    }\n\n    var oldGlobalSettings = {};\n    var globalOutputSettings = oldGlobalSettings;\n\n    var resemble = function (fileData) {\n        var pixelTransparency = 1;\n\n        var errorPixelColor = {\n            // Color for Error Pixels. Between 0 and 255.\n            red: 255,\n            green: 0,\n            blue: 255,\n            alpha: 255\n        };\n\n        var targetPix = { r: 0, g: 0, b: 0, a: 0 }; // isAntialiased\n\n        var errorPixelTransform = {\n            flat: function (px, offset) {\n                px[offset] = errorPixelColor.red;\n                px[offset + 1] = errorPixelColor.green;\n                px[offset + 2] = errorPixelColor.blue;\n                px[offset + 3] = errorPixelColor.alpha;\n            },\n            movement: function (px, offset, d1, d2) {\n                px[offset] = (d2.r * (errorPixelColor.red / 255) + errorPixelColor.red) / 2;\n                px[offset + 1] = (d2.g * (errorPixelColor.green / 255) + errorPixelColor.green) / 2;\n                px[offset + 2] = (d2.b * (errorPixelColor.blue / 255) + errorPixelColor.blue) / 2;\n                px[offset + 3] = d2.a;\n            },\n            flatDifferenceIntensity: function (px, offset, d1, d2) {\n                px[offset] = errorPixelColor.red;\n                px[offset + 1] = errorPixelColor.green;\n                px[offset + 2] = errorPixelColor.blue;\n                px[offset + 3] = colorsDistance(d1, d2);\n            },\n            movementDifferenceIntensity: function (px, offset, d1, d2) {\n                var ratio = (colorsDistance(d1, d2) / 255) * 0.8;\n\n                px[offset] = (1 - ratio) * (d2.r * (errorPixelColor.red / 255)) + ratio * errorPixelColor.red;\n                px[offset + 1] = (1 - ratio) * (d2.g * (errorPixelColor.green / 255)) + ratio * errorPixelColor.green;\n                px[offset + 2] = (1 - ratio) * (d2.b * (errorPixelColor.blue / 255)) + ratio * errorPixelColor.blue;\n                px[offset + 3] = d2.a;\n            },\n            diffOnly: function (px, offset, d1, d2) {\n                px[offset] = d2.r;\n                px[offset + 1] = d2.g;\n                px[offset + 2] = d2.b;\n                px[offset + 3] = d2.a;\n            }\n        };\n\n        var errorPixel = errorPixelTransform.flat;\n        var errorType;\n        var boundingBoxes;\n        var ignoredBoxes;\n        var ignoreAreasColoredWith;\n        var largeImageThreshold = 1200;\n        var useCrossOrigin = true;\n        var data = {};\n        var images = [];\n        var updateCallbackArray = [];\n\n        var tolerance = {\n            // between 0 and 255\n            red: 16,\n            green: 16,\n            blue: 16,\n            alpha: 16,\n            minBrightness: 16,\n            maxBrightness: 240\n        };\n\n        var ignoreAntialiasing = false;\n        var ignoreColors = false;\n        var scaleToSameSize = false;\n        var compareOnly = false;\n        var returnEarlyThreshold;\n\n        function colorsDistance(c1, c2) {\n            return (Math.abs(c1.r - c2.r) + Math.abs(c1.g - c2.g) + Math.abs(c1.b - c2.b)) / 3;\n        }\n\n        function withinBoundingBox(x, y, width, height, box) {\n            return x > (box.left || 0) && x < (box.right || width) && y > (box.top || 0) && y < (box.bottom || height);\n        }\n\n        function withinComparedArea(x, y, width, height, pixel2) {\n            var isIncluded = true;\n            var i;\n            var boundingBox;\n            var ignoredBox;\n            var selected;\n            var ignored;\n\n            if (boundingBoxes instanceof Array) {\n                selected = false;\n                for (i = 0; i < boundingBoxes.length; i++) {\n                    boundingBox = boundingBoxes[i];\n                    if (withinBoundingBox(x, y, width, height, boundingBox)) {\n                        selected = true;\n                        break;\n                    }\n                }\n            }\n            if (ignoredBoxes instanceof Array) {\n                ignored = true;\n                for (i = 0; i < ignoredBoxes.length; i++) {\n                    ignoredBox = ignoredBoxes[i];\n                    if (withinBoundingBox(x, y, width, height, ignoredBox)) {\n                        ignored = false;\n                        break;\n                    }\n                }\n            }\n\n            if (ignoreAreasColoredWith) {\n                return colorsDistance(pixel2, ignoreAreasColoredWith) !== 0;\n            }\n\n            if (selected === undefined && ignored === undefined) {\n                return true;\n            }\n            if (selected === false && ignored === true) {\n                return false;\n            }\n            if (selected === true || ignored === true) {\n                isIncluded = true;\n            }\n            if (selected === false || ignored === false) {\n                isIncluded = false;\n            }\n            return isIncluded;\n        }\n\n        function triggerDataUpdate() {\n            var len = updateCallbackArray.length;\n            var i;\n            for (i = 0; i < len; i++) {\n                if (typeof updateCallbackArray[i] === \"function\") {\n                    updateCallbackArray[i](data);\n                }\n            }\n        }\n\n        function loop(w, h, callback) {\n            var x;\n            var y;\n\n            for (x = 0; x < w; x++) {\n                for (y = 0; y < h; y++) {\n                    callback(x, y);\n                }\n            }\n        }\n\n        function parseImage(sourceImageData, width, height) {\n            var pixelCount = 0;\n            var redTotal = 0;\n            var greenTotal = 0;\n            var blueTotal = 0;\n            var alphaTotal = 0;\n            var brightnessTotal = 0;\n            var whiteTotal = 0;\n            var blackTotal = 0;\n\n            loop(width, height, function (horizontalPos, verticalPos) {\n                var offset = (verticalPos * width + horizontalPos) * 4;\n                var red = sourceImageData[offset];\n                var green = sourceImageData[offset + 1];\n                var blue = sourceImageData[offset + 2];\n                var alpha = sourceImageData[offset + 3];\n                var brightness = getBrightness(red, green, blue);\n\n                if (red === green && red === blue && alpha) {\n                    if (red === 0) {\n                        blackTotal++;\n                    } else if (red === 255) {\n                        whiteTotal++;\n                    }\n                }\n\n                pixelCount++;\n\n                redTotal += (red / 255) * 100;\n                greenTotal += (green / 255) * 100;\n                blueTotal += (blue / 255) * 100;\n                alphaTotal += ((255 - alpha) / 255) * 100;\n                brightnessTotal += (brightness / 255) * 100;\n            });\n\n            data.red = Math.floor(redTotal / pixelCount);\n            data.green = Math.floor(greenTotal / pixelCount);\n            data.blue = Math.floor(blueTotal / pixelCount);\n            data.alpha = Math.floor(alphaTotal / pixelCount);\n            data.brightness = Math.floor(brightnessTotal / pixelCount);\n            data.white = Math.floor((whiteTotal / pixelCount) * 100);\n            data.black = Math.floor((blackTotal / pixelCount) * 100);\n\n            triggerDataUpdate();\n        }\n\n        function onLoadImage(hiddenImage, callback) {\n            // don't assign to hiddenImage, see https://github.com/Huddle/Resemble.js/pull/87/commits/300d43352a2845aad289b254bfbdc7cd6a37e2d7\n            var width = hiddenImage.width;\n            var height = hiddenImage.height;\n\n            if (scaleToSameSize && images.length === 1) {\n                width = images[0].width;\n                height = images[0].height;\n            }\n\n            var hiddenCanvas = createCanvas(width, height);\n            var imageData;\n\n            hiddenCanvas.getContext(\"2d\").drawImage(hiddenImage, 0, 0, width, height);\n            imageData = hiddenCanvas.getContext(\"2d\").getImageData(0, 0, width, height);\n\n            images.push(imageData);\n\n            callback(imageData, width, height);\n        }\n\n        function loadImageData(fileDataForImage, callback) {\n            var fileReader;\n            var hiddenImage = new Img();\n\n            if (!hiddenImage.setAttribute) {\n                hiddenImage.setAttribute = function setAttribute() {};\n            }\n\n            if (useCrossOrigin) {\n                hiddenImage.setAttribute(\"crossorigin\", \"anonymous\");\n            }\n\n            hiddenImage.onerror = function (event) {\n                hiddenImage.onload = null;\n                hiddenImage.onerror = null; // fixes pollution between calls\n                const error = event ? event + \"\" : \"Unknown error\";\n                images.push({ error: `Failed to load image '${fileDataForImage}'. ${error}` });\n                callback();\n            };\n\n            hiddenImage.onload = function () {\n                hiddenImage.onload = null; // fixes pollution between calls\n                hiddenImage.onerror = null;\n                onLoadImage(hiddenImage, callback);\n            };\n\n            if (typeof fileDataForImage === \"string\") {\n                hiddenImage.src = fileDataForImage;\n                if (!isNode() && hiddenImage.complete && hiddenImage.naturalWidth > 0) {\n                    hiddenImage.onload();\n                }\n            } else if (\n                typeof fileDataForImage.data !== \"undefined\" &&\n                typeof fileDataForImage.width === \"number\" &&\n                typeof fileDataForImage.height === \"number\"\n            ) {\n                images.push(fileDataForImage);\n\n                callback(fileDataForImage, fileDataForImage.width, fileDataForImage.height);\n            } else if (typeof Buffer !== \"undefined\" && fileDataForImage instanceof Buffer) {\n                // If we have Buffer, assume we're on Node+Canvas and its supported\n                // hiddenImage.src = fileDataForImage;\n\n                loadNodeCanvasImage(fileDataForImage)\n                    .then(function (image) {\n                        hiddenImage.onload = null; // fixes pollution between calls\n                        hiddenImage.onerror = null;\n                        onLoadImage(image, callback);\n                    })\n                    .catch(function (err) {\n                        images.push({\n                            error: err ? err + \"\" : \"Image load error.\"\n                        });\n                        callback();\n                    });\n            } else {\n                fileReader = new FileReader();\n                fileReader.onload = function (event) {\n                    hiddenImage.src = event.target.result;\n                };\n                fileReader.readAsDataURL(fileDataForImage);\n            }\n        }\n\n        function isColorSimilar(a, b, color) {\n            var absDiff = Math.abs(a - b);\n\n            if (typeof a === \"undefined\") {\n                return false;\n            }\n            if (typeof b === \"undefined\") {\n                return false;\n            }\n\n            if (a === b) {\n                return true;\n            } else if (absDiff < tolerance[color]) {\n                return true;\n            }\n            return false;\n        }\n\n        function isPixelBrightnessSimilar(d1, d2) {\n            var alpha = isColorSimilar(d1.a, d2.a, \"alpha\");\n            var brightness = isColorSimilar(d1.brightness, d2.brightness, \"minBrightness\");\n            return brightness && alpha;\n        }\n\n        function getBrightness(r, g, b) {\n            return 0.3 * r + 0.59 * g + 0.11 * b;\n        }\n\n        function isRGBSame(d1, d2) {\n            var red = d1.r === d2.r;\n            var green = d1.g === d2.g;\n            var blue = d1.b === d2.b;\n            return red && green && blue;\n        }\n\n        function isRGBSimilar(d1, d2) {\n            var red = isColorSimilar(d1.r, d2.r, \"red\");\n            var green = isColorSimilar(d1.g, d2.g, \"green\");\n            var blue = isColorSimilar(d1.b, d2.b, \"blue\");\n            var alpha = isColorSimilar(d1.a, d2.a, \"alpha\");\n\n            return red && green && blue && alpha;\n        }\n\n        function isContrasting(d1, d2) {\n            return Math.abs(d1.brightness - d2.brightness) > tolerance.maxBrightness;\n        }\n\n        function getHue(red, green, blue) {\n            var r = red / 255;\n            var g = green / 255;\n            var b = blue / 255;\n            var max = Math.max(r, g, b);\n            var min = Math.min(r, g, b);\n            var h;\n            var d;\n\n            if (max === min) {\n                h = 0; // achromatic\n            } else {\n                d = max - min;\n                switch (max) {\n                    case r:\n                        h = (g - b) / d + (g < b ? 6 : 0);\n                        break;\n                    case g:\n                        h = (b - r) / d + 2;\n                        break;\n                    case b:\n                        h = (r - g) / d + 4;\n                        break;\n                    default:\n                        h /= 6;\n                }\n            }\n\n            return h;\n        }\n\n        function isAntialiased(sourcePix, pix, cacheSet, verticalPos, horizontalPos, width) {\n            var offset;\n            var distance = 1;\n            var i;\n            var j;\n            var hasHighContrastSibling = 0;\n            var hasSiblingWithDifferentHue = 0;\n            var hasEquivalentSibling = 0;\n\n            addHueInfo(sourcePix);\n\n            for (i = distance * -1; i <= distance; i++) {\n                for (j = distance * -1; j <= distance; j++) {\n                    if (i === 0 && j === 0) {\n                        // ignore source pixel\n                    } else {\n                        offset = ((verticalPos + j) * width + (horizontalPos + i)) * 4;\n\n                        if (!getPixelInfo(targetPix, pix, offset, cacheSet)) {\n                            continue;\n                        }\n\n                        addBrightnessInfo(targetPix);\n                        addHueInfo(targetPix);\n\n                        if (isContrasting(sourcePix, targetPix)) {\n                            hasHighContrastSibling++;\n                        }\n\n                        if (isRGBSame(sourcePix, targetPix)) {\n                            hasEquivalentSibling++;\n                        }\n\n                        if (Math.abs(targetPix.h - sourcePix.h) > 0.3) {\n                            hasSiblingWithDifferentHue++;\n                        }\n\n                        if (hasSiblingWithDifferentHue > 1 || hasHighContrastSibling > 1) {\n                            return true;\n                        }\n                    }\n                }\n            }\n\n            if (hasEquivalentSibling < 2) {\n                return true;\n            }\n\n            return false;\n        }\n\n        function copyPixel(px, offset, pix) {\n            if (errorType === \"diffOnly\") {\n                return;\n            }\n\n            px[offset] = pix.r; // r\n            px[offset + 1] = pix.g; // g\n            px[offset + 2] = pix.b; // b\n            px[offset + 3] = pix.a * pixelTransparency; // a\n        }\n\n        function copyGrayScalePixel(px, offset, pix) {\n            if (errorType === \"diffOnly\") {\n                return;\n            }\n\n            px[offset] = pix.brightness; // r\n            px[offset + 1] = pix.brightness; // g\n            px[offset + 2] = pix.brightness; // b\n            px[offset + 3] = pix.a * pixelTransparency; // a\n        }\n\n        function getPixelInfo(dst, pix, offset) {\n            if (pix.length > offset) {\n                dst.r = pix[offset];\n                dst.g = pix[offset + 1];\n                dst.b = pix[offset + 2];\n                dst.a = pix[offset + 3];\n\n                return true;\n            }\n\n            return false;\n        }\n\n        function addBrightnessInfo(pix) {\n            pix.brightness = getBrightness(pix.r, pix.g, pix.b); // 'corrected' lightness\n        }\n\n        function addHueInfo(pix) {\n            pix.h = getHue(pix.r, pix.g, pix.b);\n        }\n\n        function analyseImages(img1, img2, width, height) {\n            var data1 = img1.data;\n            var data2 = img2.data;\n            var hiddenCanvas;\n            var context;\n            var imgd;\n            var pix;\n\n            if (!compareOnly) {\n                hiddenCanvas = createCanvas(width, height);\n\n                context = hiddenCanvas.getContext(\"2d\");\n                imgd = context.createImageData(width, height);\n                pix = imgd.data;\n            }\n\n            var mismatchCount = 0;\n            var diffBounds = {\n                top: height,\n                left: width,\n                bottom: 0,\n                right: 0\n            };\n            var updateBounds = function (x, y) {\n                diffBounds.left = Math.min(x, diffBounds.left);\n                diffBounds.right = Math.max(x, diffBounds.right);\n                diffBounds.top = Math.min(y, diffBounds.top);\n                diffBounds.bottom = Math.max(y, diffBounds.bottom);\n            };\n\n            var time = Date.now();\n\n            var skip;\n\n            if (!!largeImageThreshold && ignoreAntialiasing && (width > largeImageThreshold || height > largeImageThreshold)) {\n                skip = 6;\n            }\n\n            var pixel1 = { r: 0, g: 0, b: 0, a: 0 };\n            var pixel2 = { r: 0, g: 0, b: 0, a: 0 };\n\n            var skipTheRest = false;\n\n            loop(width, height, function (horizontalPos, verticalPos) {\n                if (skipTheRest) {\n                    return;\n                }\n\n                if (skip) {\n                    // only skip if the image isn't small\n                    if (verticalPos % skip === 0 || horizontalPos % skip === 0) {\n                        return;\n                    }\n                }\n\n                var offset = (verticalPos * width + horizontalPos) * 4;\n                if (!getPixelInfo(pixel1, data1, offset, 1) || !getPixelInfo(pixel2, data2, offset, 2)) {\n                    return;\n                }\n\n                var isWithinComparedArea = withinComparedArea(horizontalPos, verticalPos, width, height, pixel2);\n\n                if (ignoreColors) {\n                    addBrightnessInfo(pixel1);\n                    addBrightnessInfo(pixel2);\n\n                    if (isPixelBrightnessSimilar(pixel1, pixel2) || !isWithinComparedArea) {\n                        if (!compareOnly) {\n                            copyGrayScalePixel(pix, offset, pixel2);\n                        }\n                    } else {\n                        if (!compareOnly) {\n                            errorPixel(pix, offset, pixel1, pixel2);\n                        }\n\n                        mismatchCount++;\n                        updateBounds(horizontalPos, verticalPos);\n                    }\n                    return;\n                }\n\n                if (isRGBSimilar(pixel1, pixel2) || !isWithinComparedArea) {\n                    if (!compareOnly) {\n                        copyPixel(pix, offset, pixel1);\n                    }\n                } else if (\n                    ignoreAntialiasing &&\n                    (addBrightnessInfo(pixel1), // jit pixel info augmentation looks a little weird, sorry.\n                    addBrightnessInfo(pixel2),\n                    isAntialiased(pixel1, data1, 1, verticalPos, horizontalPos, width) || isAntialiased(pixel2, data2, 2, verticalPos, horizontalPos, width))\n                ) {\n                    if (isPixelBrightnessSimilar(pixel1, pixel2) || !isWithinComparedArea) {\n                        if (!compareOnly) {\n                            copyGrayScalePixel(pix, offset, pixel2);\n                        }\n                    } else {\n                        if (!compareOnly) {\n                            errorPixel(pix, offset, pixel1, pixel2);\n                        }\n\n                        mismatchCount++;\n                        updateBounds(horizontalPos, verticalPos);\n                    }\n                } else {\n                    if (!compareOnly) {\n                        errorPixel(pix, offset, pixel1, pixel2);\n                    }\n\n                    mismatchCount++;\n                    updateBounds(horizontalPos, verticalPos);\n                }\n\n                if (compareOnly) {\n                    var currentMisMatchPercent = (mismatchCount / (height * width)) * 100;\n\n                    if (currentMisMatchPercent > returnEarlyThreshold) {\n                        skipTheRest = true;\n                    }\n                }\n            });\n\n            data.rawMisMatchPercentage = (mismatchCount / (height * width)) * 100;\n            data.misMatchPercentage = data.rawMisMatchPercentage.toFixed(2);\n            data.diffBounds = diffBounds;\n            data.analysisTime = Date.now() - time;\n\n            data.getImageDataUrl = function (text) {\n                if (compareOnly) {\n                    throw Error(\"No diff image available - ran in compareOnly mode\");\n                }\n\n                var barHeight = 0;\n\n                if (text) {\n                    barHeight = addLabel(text, context, hiddenCanvas);\n                }\n\n                context.putImageData(imgd, 0, barHeight);\n\n                return hiddenCanvas.toDataURL(\"image/png\");\n            };\n\n            if (!compareOnly && hiddenCanvas.toBuffer) {\n                data.getBuffer = function (includeOriginal) {\n                    if (includeOriginal) {\n                        var imageWidth = hiddenCanvas.width + 2;\n                        hiddenCanvas.width = imageWidth * 3;\n                        context.putImageData(img1, 0, 0);\n                        context.putImageData(img2, imageWidth, 0);\n                        context.putImageData(imgd, imageWidth * 2, 0);\n                    } else {\n                        context.putImageData(imgd, 0, 0);\n                    }\n                    return hiddenCanvas.toBuffer();\n                };\n            }\n        }\n\n        function addLabel(text, context, hiddenCanvas) {\n            var textPadding = 2;\n\n            context.font = \"12px sans-serif\";\n\n            var textWidth = context.measureText(text).width + textPadding * 2;\n            var barHeight = 22;\n\n            if (textWidth > hiddenCanvas.width) {\n                hiddenCanvas.width = textWidth;\n            }\n\n            hiddenCanvas.height += barHeight;\n\n            context.fillStyle = \"#666\";\n            context.fillRect(0, 0, hiddenCanvas.width, barHeight - 4);\n            context.fillStyle = \"#fff\";\n            context.fillRect(0, barHeight - 4, hiddenCanvas.width, 4);\n\n            context.fillStyle = \"#fff\";\n            context.textBaseline = \"top\";\n            context.font = \"12px sans-serif\";\n            context.fillText(text, textPadding, 1);\n\n            return barHeight;\n        }\n\n        function normalise(img, w, h) {\n            var c;\n            var context;\n\n            if (img.height < h || img.width < w) {\n                c = createCanvas(w, h);\n                context = c.getContext(\"2d\");\n                context.putImageData(img, 0, 0);\n                return context.getImageData(0, 0, w, h);\n            }\n\n            return img;\n        }\n\n        function outputSettings(options) {\n            var key;\n\n            if (options.errorColor) {\n                for (key in options.errorColor) {\n                    if (options.errorColor.hasOwnProperty(key)) {\n                        errorPixelColor[key] = options.errorColor[key] === void 0 ? errorPixelColor[key] : options.errorColor[key];\n                    }\n                }\n            }\n\n            if (options.errorType && errorPixelTransform[options.errorType]) {\n                errorPixel = errorPixelTransform[options.errorType];\n                errorType = options.errorType;\n            }\n\n            if (options.errorPixel && typeof options.errorPixel === \"function\") {\n                errorPixel = options.errorPixel;\n            }\n\n            pixelTransparency = isNaN(Number(options.transparency)) ? pixelTransparency : options.transparency;\n\n            if (options.largeImageThreshold !== undefined) {\n                largeImageThreshold = options.largeImageThreshold;\n            }\n\n            if (options.useCrossOrigin !== undefined) {\n                useCrossOrigin = options.useCrossOrigin;\n            }\n\n            if (options.boundingBox !== undefined) {\n                boundingBoxes = [options.boundingBox];\n            }\n\n            if (options.ignoredBox !== undefined) {\n                ignoredBoxes = [options.ignoredBox];\n            }\n\n            if (options.boundingBoxes !== undefined) {\n                boundingBoxes = options.boundingBoxes;\n            }\n\n            if (options.ignoredBoxes !== undefined) {\n                ignoredBoxes = options.ignoredBoxes;\n            }\n\n            if (options.ignoreAreasColoredWith !== undefined) {\n                ignoreAreasColoredWith = options.ignoreAreasColoredWith;\n            }\n        }\n\n        function compare(one, two) {\n            if (globalOutputSettings !== oldGlobalSettings) {\n                outputSettings(globalOutputSettings);\n            }\n\n            function onceWeHaveBoth() {\n                var width;\n                var height;\n                if (images.length === 2) {\n                    if (images[0].error || images[1].error) {\n                        data = {};\n                        data.error = images[0].error ? images[0].error : images[1].error;\n                        triggerDataUpdate();\n                        return;\n                    }\n                    width = images[0].width > images[1].width ? images[0].width : images[1].width;\n                    height = images[0].height > images[1].height ? images[0].height : images[1].height;\n\n                    if (images[0].width === images[1].width && images[0].height === images[1].height) {\n                        data.isSameDimensions = true;\n                    } else {\n                        data.isSameDimensions = false;\n                    }\n\n                    data.dimensionDifference = {\n                        width: images[0].width - images[1].width,\n                        height: images[0].height - images[1].height\n                    };\n\n                    analyseImages(normalise(images[0], width, height), normalise(images[1], width, height), width, height);\n\n                    triggerDataUpdate();\n                }\n            }\n\n            images = [];\n            loadImageData(one, onceWeHaveBoth);\n            loadImageData(two, onceWeHaveBoth);\n        }\n\n        function getCompareApi(param) {\n            var secondFileData;\n            var hasMethod = typeof param === \"function\";\n\n            if (!hasMethod) {\n                // assume it's file data\n                secondFileData = param;\n            }\n\n            var self = {\n                setReturnEarlyThreshold: function (threshold) {\n                    if (threshold) {\n                        compareOnly = true;\n                        returnEarlyThreshold = threshold;\n                    }\n                    return self;\n                },\n                scaleToSameSize: function () {\n                    scaleToSameSize = true;\n\n                    if (hasMethod) {\n                        param();\n                    }\n                    return self;\n                },\n                useOriginalSize: function () {\n                    scaleToSameSize = false;\n\n                    if (hasMethod) {\n                        param();\n                    }\n                    return self;\n                },\n                ignoreNothing: function () {\n                    tolerance.red = 0;\n                    tolerance.green = 0;\n                    tolerance.blue = 0;\n                    tolerance.alpha = 0;\n                    tolerance.minBrightness = 0;\n                    tolerance.maxBrightness = 255;\n\n                    ignoreAntialiasing = false;\n                    ignoreColors = false;\n\n                    if (hasMethod) {\n                        param();\n                    }\n                    return self;\n                },\n                ignoreLess: function () {\n                    tolerance.red = 16;\n                    tolerance.green = 16;\n                    tolerance.blue = 16;\n                    tolerance.alpha = 16;\n                    tolerance.minBrightness = 16;\n                    tolerance.maxBrightness = 240;\n\n                    ignoreAntialiasing = false;\n                    ignoreColors = false;\n\n                    if (hasMethod) {\n                        param();\n                    }\n                    return self;\n                },\n                ignoreAntialiasing: function () {\n                    tolerance.red = 32;\n                    tolerance.green = 32;\n                    tolerance.blue = 32;\n                    tolerance.alpha = 32;\n                    tolerance.minBrightness = 64;\n                    tolerance.maxBrightness = 96;\n\n                    ignoreAntialiasing = true;\n                    ignoreColors = false;\n\n                    if (hasMethod) {\n                        param();\n                    }\n                    return self;\n                },\n                ignoreColors: function () {\n                    tolerance.alpha = 16;\n                    tolerance.minBrightness = 16;\n                    tolerance.maxBrightness = 240;\n\n                    ignoreAntialiasing = false;\n                    ignoreColors = true;\n\n                    if (hasMethod) {\n                        param();\n                    }\n                    return self;\n                },\n                ignoreAlpha: function () {\n                    tolerance.red = 16;\n                    tolerance.green = 16;\n                    tolerance.blue = 16;\n                    tolerance.alpha = 255;\n                    tolerance.minBrightness = 16;\n                    tolerance.maxBrightness = 240;\n\n                    ignoreAntialiasing = false;\n                    ignoreColors = false;\n\n                    if (hasMethod) {\n                        param();\n                    }\n                    return self;\n                },\n                repaint: function () {\n                    if (hasMethod) {\n                        param();\n                    }\n                    return self;\n                },\n                outputSettings: function (options) {\n                    outputSettings(options);\n                    return self;\n                },\n                onComplete: function (callback) {\n                    updateCallbackArray.push(callback);\n\n                    var wrapper = function () {\n                        compare(fileData, secondFileData);\n                    };\n\n                    wrapper();\n\n                    return getCompareApi(wrapper);\n                },\n                setupCustomTolerance: function (customSettings) {\n                    for (var property in tolerance) {\n                        if (!customSettings.hasOwnProperty(property)) {\n                            continue;\n                        }\n\n                        tolerance[property] = customSettings[property];\n                    }\n                }\n            };\n\n            return self;\n        }\n\n        var rootSelf = {\n            onComplete: function (callback) {\n                updateCallbackArray.push(callback);\n                loadImageData(fileData, function (imageData, width, height) {\n                    parseImage(imageData.data, width, height);\n                });\n            },\n            compareTo: function (secondFileData) {\n                return getCompareApi(secondFileData);\n            },\n            outputSettings: function (options) {\n                outputSettings(options);\n                return rootSelf;\n            }\n        };\n\n        return rootSelf;\n    };\n\n    function setGlobalOutputSettings(settings) {\n        globalOutputSettings = settings;\n        return resemble;\n    }\n\n    function applyIgnore(api, ignore, customTolerance) {\n        switch (ignore) {\n            case \"nothing\":\n                api.ignoreNothing();\n                break;\n            case \"less\":\n                api.ignoreLess();\n                break;\n            case \"antialiasing\":\n                api.ignoreAntialiasing();\n                break;\n            case \"colors\":\n                api.ignoreColors();\n                break;\n            case \"alpha\":\n                api.ignoreAlpha();\n                break;\n            default:\n                throw new Error(\"Invalid ignore: \" + ignore);\n        }\n\n        api.setupCustomTolerance(customTolerance);\n    }\n\n    resemble.compare = function (image1, image2, options, cb) {\n        var callback;\n        var opt;\n\n        if (typeof options === \"function\") {\n            callback = options;\n            opt = {};\n        } else {\n            callback = cb;\n            opt = options || {};\n        }\n\n        var res = resemble(image1);\n        var compare;\n\n        if (opt.output) {\n            res.outputSettings(opt.output);\n        }\n\n        compare = res.compareTo(image2);\n\n        if (opt.returnEarlyThreshold) {\n            compare.setReturnEarlyThreshold(opt.returnEarlyThreshold);\n        }\n\n        if (opt.scaleToSameSize) {\n            compare.scaleToSameSize();\n        }\n\n        var toleranceSettings = opt.tolerance || {};\n        if (typeof opt.ignore === \"string\") {\n            applyIgnore(compare, opt.ignore, toleranceSettings);\n        } else if (opt.ignore && opt.ignore.forEach) {\n            opt.ignore.forEach(function (v) {\n                applyIgnore(compare, v, toleranceSettings);\n            });\n        }\n\n        compare.onComplete(function (data) {\n            if (data.error) {\n                callback(data.error);\n            } else {\n                callback(null, data);\n            }\n        });\n    };\n\n    resemble.outputSettings = setGlobalOutputSettings;\n    return resemble;\n});\n", "const resemble = require(\"./resemble\");\n\nmodule.exports = function compareImages(image1, image2, options) {\n    return new Promise((resolve, reject) => {\n        resemble.compare(image1, image2, options, (err, data) => {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(data);\n            }\n        });\n    });\n};\n", "import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || setTimeout)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\n\nprocess._rerenderCount = 0;\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n", "export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n", "import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { h, Fragment, render, Component } from \"preact\";\nimport compareImages from \"resemblejs/compareImages\";\nimport { Canvg } from \"canvg\";\n\nconst container = document.querySelector(\"#container\");\n\nclass Chooser extends Component {\n  constructor(props) {\n    super(props);\n    this.setState({\n      color: props.colors[0],\n      radius: props.radii[0],\n    });\n  }\n  componentDidUpdate() {\n    this.props.updater(this.state.color, this.state.radius);\n  }\n  render() {\n    let colorRows = [];\n    for (const color of this.props.colors) {\n      colorRows.push(\n        <td class=\"pr-1\">\n          <div\n            onClick={() => {\n              this.setState({\n                color: color,\n              });\n            }}\n            class='rounded-md'\n            style={{\n              width: \"60px\",\n              height: \"60px\",\n              backgroundColor: color,\n              border:\n                this.state.color == color ? \"2px solid red\" : \"2px solid black\",\n              cursor: \"pointer\",\n            }}\n          ></div>\n        </td>\n      );\n    }\n\n    let radiusRows = [];\n    radiusRows.push(\n      <td class=\"pr-1\">\n        <div\n          onClick={() => {\n            const canvas = document.querySelector(\"#canvas\");\n            const ctx = canvas.getContext(\"2d\");\n            ctx.rect(\n              0,\n              0,\n              canvas.getAttribute(\"width\"),\n              canvas.getAttribute(\"height\")\n            );\n            ctx.fillStyle = this.state.color;\n            ctx.fill();\n          }}\n          class=\"flex items-center justify-center rounded-md\"\n          style={{\n            width: \"60px\",\n            height: \"60px\",\n            backgroundColor: this.state.color,\n            border: \"1px solid black\",\n            cursor: \"pointer\",\n          }}\n        >\n        <svg width=\"40\" height=\"40\" viewBox=\"-1 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#fff\" stroke=\"#000\" stroke-width=\"0.5\" d=\"M6.192 2.78c-.458-.677-.927-1.248-1.35-1.643a2.972 2.972 0 0 0-.71-.515c-.217-.104-.56-.205-.882-.02c-.367.213-.427.63-.43.896c-.003.304.064.664.173 1.044c.196.687.556 1.528 1.035 2.402L.752 8.22c-.277.277-.269.656-.218.918c.055.283.187.593.36.903c.348.627.92 1.361 1.626 2.068c.707.707 1.441 1.278 2.068 1.626c.31.173.62.305.903.36c.262.05.64.059.918-.218l5.615-5.615c.118.257.092.512.05.939c-.03.292-.068.665-.073 1.176v.123h.003a1 1 0 0 0 1.993 0H14v-.057a1.01 1.01 0 0 0-.004-.117c-.055-1.25-.7-2.738-1.86-3.494a4.322 4.322 0 0 0-.211-.434c-.349-.626-.92-1.36-1.627-2.067c-.707-.707-1.441-1.279-2.068-1.627c-.31-.172-.62-.304-.903-.36c-.262-.05-.64-.058-.918.219l-.217.216zM4.16 1.867c.381.356.844.922 1.311 1.632l-.704.705c-.382-.727-.66-1.402-.813-1.938a3.283 3.283 0 0 1-.131-.673c.091.061.204.15.337.274zm.394 3.965c.54.852 1.107 1.567 1.607 2.033a.5.5 0 1 0 .682-.732c-.453-.422-1.017-1.136-1.564-2.027l1.088-1.088c.054.12.115.243.183.365c.349.627.92 1.361 1.627 2.068c.706.707 1.44 1.278 2.068 1.626c.122.068.244.13.365.183l-4.861 4.862a.571.571 0 0 1-.068-.01c-.137-.027-.342-.104-.608-.252c-.524-.292-1.186-.8-1.846-1.46c-.66-.66-1.168-1.32-1.46-1.846c-.147-.265-.225-.47-.251-.607a.573.573 0 0 1-.01-.068l3.048-3.047zm2.87-1.935a2.44 2.44 0 0 1-.241-.561c.135.033.324.11.562.241c.524.292 1.186.8 1.846 1.46c.45.45.83.901 1.118 1.31a3.497 3.497 0 0 0-1.066.091a11.27 11.27 0 0 1-.76-.694c-.66-.66-1.167-1.322-1.458-1.847z\"/></svg>\n        </div>\n      </td>\n    );\n    for (const size of this.props.radii) {\n      radiusRows.push(\n        <td>\n          <div\n            class={`rounded-md flex items-center cursor-pointer justify-center ${this.state.radius == size ? 'bg-green-200' : 'bg-grey-200'}`}\n            style={{\n              minWidth: \"60px\",\n              minHeight: \"60px\",\n            }}\n            onClick={() => {\n              this.setState({\n                radius: size,\n              });\n            }}\n          >\n            <div\n              style={{\n                width: `${size * 2}px`,\n                height: `${size * 2}px`,\n                backgroundColor: this.state.color,\n                // backgroundColor: this.state.radius == size ? \"red\" : \"white\",\n                border: \"2px solid black\",\n                borderRadius: \"100000px\",\n              }}\n            ></div>\n          </div>\n        </td>\n      );\n    }\n\n    let radiusSelector = (\n      <table class=\"mt-1\">\n        <tbody>\n          <tr>{radiusRows}</tr>\n        </tbody>\n      </table>\n    );\n\n    let colorSelector = (\n      <table class=\"mt-1\">\n        <tbody>\n          <tr>{colorRows}</tr>\n        </tbody>\n      </table>\n    );\n    return (\n      <div class=\"flex flex-col items-center\">\n        <div>{colorSelector}</div>\n        <div>{radiusSelector}</div>\n      </div>\n    );\n  }\n}\n\nfunction flagDrawer(options) {\n  let colors = options.colors;\n  let isDrawing = false;\n  let rect = null;\n  colors = colors.map((x) => `#${x}`);\n  let currColor = colors[0];\n  let radiuses = [5, 10, 25];\n  let currRadius = radiuses[0];\n  const canvasWidth = options.width;\n  const canvasHeight = options.height;\n  let lastCoords = null;\n\n  const drawCircle = (ctx, options) => {\n    ctx.beginPath();\n    ctx.arc(options.x, options.y, options.radius, 0, 2 * Math.PI, false);\n    ctx.fillStyle = options.color;\n    ctx.fill();\n  };\n\n  const mouseStart = (e) => {\n    const canvas = e.target;\n    e.stopPropagation();\n    e.preventDefault();\n    const ctx = canvas.getContext(\"2d\");\n    rect = canvas.getBoundingClientRect();\n    let x = e.x - rect.x;\n    let y = e.y - rect.y;\n\n    drawCircle(ctx, {\n      x: x,\n      y: y,\n      radius: currRadius,\n      color: currColor,\n    });\n    lastCoords = [x, y];\n    isDrawing = true;\n  };\n  const mouseMove = (e) => {\n    if (!isDrawing) {\n      return;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n\n    let x = null;\n    let y = null;\n    if (e instanceof TouchEvent) {\n      // console.log(e);\n      const touch = e.targetTouches[0];\n      x = touch.clientX - rect.x;\n      y = touch.clientY - rect.y;\n    } else {\n      x = e.x - rect.x;\n      y = e.y - rect.y;\n    }\n\n    const canvas = e.target;\n    const ctx = canvas.getContext(\"2d\");\n    if (lastCoords !== null) {\n      ctx.beginPath();\n      ctx.moveTo(lastCoords[0], lastCoords[1]);\n      ctx.lineTo(x, y);\n      ctx.lineWidth = currRadius * 2;\n      ctx.strokeStyle = currColor;\n\n      // Draw the Path\n      ctx.stroke();\n    }\n\n    drawCircle(ctx, {\n      x: x,\n      y: y,\n      radius: currRadius,\n      color: currColor,\n    });\n    lastCoords = [x, y];\n  };\n  const mouseEnd = (e) => {\n    isDrawing = false;\n  };\n\n  document.body.addEventListener(\"mouseup\", mouseEnd);\n  document.body.addEventListener(\"touchend\", mouseEnd);\n\n  let canvasEl = (\n    <canvas\n      width={canvasWidth}\n      height={canvasHeight}\n      id=\"canvas\"\n      style=\"border: 1px solid black; margin: 0 auto;\"\n      onMouseDown={mouseStart}\n      // onMouseUp={mouseEnd}\n      onMouseMove={mouseMove}\n      onTouchStart={mouseStart}\n      onTouchMove={mouseMove}\n    ></canvas>\n  );\n\n  return (\n    <div class=\"mt-2\">\n      {canvasEl}\n      <Chooser\n        colors={colors}\n        radii={radiuses}\n        updater={(color, radius) => {\n          currColor = color;\n          currRadius = radius;\n        }}\n      />\n    </div>\n  );\n}\n\nfunction canvasToImg(desc, canvas) {\n  const image = document.createElement(\"img\");\n  image.src = canvas.toDataURL(\"image/png\");\n  image.style.width = \"570px\";\n  let p = document.createElement(\"p\");\n  p.innerText = desc;\n\n  document.body.appendChild(p);\n  document.body.appendChild(image);\n}\n\nasync function renderSvgToCanvas(url) {\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  let vr = await Canvg.from(ctx, url);\n  vr.start();\n  return canvas;\n}\n\nasync function compareFlags(name, drawnFlagCanvas, svgUrl) {\n  // // render the svg to a canvas\n  // const expectedCanvas = await renderSvgToCanvas(svgUrl);\n\n\n\n  // const expectedImageR = await fetch(`/compare-flags/${name}-flag-150px.png`);\n  // const expectedData = await expectedImageR.arrayBuffer();\n  // const view = new Uint8Array(expectedData);\n\n  let img = new Image();\n  img.src = `/compare-flags/${name}-flag-150px.png`\n  await img.decode();\n\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = img.width;\n  canvas.height = img.height;\n  const ctx = canvas.getContext(\"2d\");\n  ctx.drawImage(img,0,0);\n  // document.body.appendChild(canvas)\n\n\n\n  // let canvasDrawn = document.querySelector(\"#canvas\");\n  // canvasDrawn = await getBlurredCanvas({\n  //   canvas: canvasDrawn,\n  //   blurRadius: 20,\n  // });\n  // canvasToImg(\"drawn\", canvasDrawn);\n  // const canvasExpected = document.querySelector(\"#orig-canvas\");\n  // canvasToImg(\"expected\", canvasExpected);\n  // console.log(canvasExpected.toDataURL())\n\n  let result = await compareImages(\n    canvas.toDataURL(),\n    drawnFlagCanvas.toDataURL(),\n    {\n      scaleToSameSize: true,\n      tolerance: {\n        alpha: 100,\n      },\n    }\n  );\n\n  return { name, similarityPercent: 100.0 - result.misMatchPercentage };\n}\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nfunction cloneCanvas(oldCanvas) {\n  //create a new canvas\n  var newCanvas = document.createElement(\"canvas\");\n  var context = newCanvas.getContext(\"2d\");\n\n  //set dimensions\n  newCanvas.width = oldCanvas.width;\n  newCanvas.height = oldCanvas.height;\n\n  //apply the old canvas to the new one\n  context.drawImage(oldCanvas, 0, 0);\n\n  //return the new canvas\n  return newCanvas;\n}\n\nasync function getBlurredCanvas(options) {\n  let unblurredCanvas = null;\n  if (options.svg) {\n    // Draw the SVG\n    unblurredCanvas = document.createElement(\"canvas\");\n    const ctxr = unblurredCanvas.getContext(\"2d\");\n    let vr = await Canvg.from(ctxr, options.svg);\n    vr.start();\n  } else {\n    unblurredCanvas = options.canvas;\n  }\n\n  // Convert the canvas back to a PNG to satisfy glfx.js\n  const image = document.createElement(\"img\");\n  image.src = unblurredCanvas.toDataURL(\"image/png\");\n\n  // Sometimes the image isn't loaded already so interrupt the event loop\n  await sleep(5);\n\n  // Initialize glfx.js and run the triangleBlur filter\n  const fxcanvas = fx.canvas();\n  const texture = fxcanvas.texture(image);\n  fxcanvas\n    .draw(texture)\n    .hexagonalPixelate(320, 239.5, 20)\n    .triangleBlur(options.blurRadius)\n    .update();\n  // fxcanvas.draw(texture).triangleBlur(options.blurRadius).update();\n  console.log(fxcanvas);\n\n  let clone = cloneCanvas(fxcanvas);\n  return clone;\n}\n\nfunction rng(seed) {\n  function random() {\n    let x = Math.sin(seed++) * 10000;\n    return x - Math.floor(x);\n  }\n\n  return random;\n}\n\nfunction hashString(str) {\n  var hash = 0,\n    i,\n    chr;\n  if (str.length === 0) return hash;\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n}\n\nfunction pickCountry(data) {\n  let countries = Object.keys(data);\n  // let today = new Date('8/9/23');\n  let today = new Date();\n  let todayHash = hashString(today.toDateString());\n\n  // Check the distribution\n  // let samples = {};\n  // for (const c of countries) {\n  //   samples[c] = 0;\n  // }\n  // for (let i = 0; i < 10000;i++) {\n  //   let random = rng(Math.random());\n  //   let idx = Math.floor(random() * countries.length);\n  //   samples[countries[idx]] += 1;\n  // }\n\n  let random = rng(todayHash);\n  let idx = Math.floor(random() * countries.length);\n  return countries[idx];\n}\n\nasync function rankFlags(countries) {\n  let svgs = countries.map((x) => [x, `/data/${x}/flag.svg`]);\n  const drawnFlag = document.querySelector(\"#canvas\");\n  console.log(drawnFlag);\n\n  let coros = [];\n  for (const [name, svgUrl] of svgs) {\n    coros.push(compareFlags(name, drawnFlag, svgUrl));\n  }\n  let data = await Promise.all(coros);\n  data = data.sort((a, b) => b.similarityPercent - a.similarityPercent);\n  return data;\n}\n\nclass Checker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"none\",\n    };\n  }\n  render() {\n    let button = null;\n    if (this.state.status === \"checking\") {\n      button = <p>Checking...</p>;\n    } else {\n      button = (\n        <button\n          class=\"btn btn-outline btn-secondary\"\n          onClick={async () => {\n            console.log(\"Checking\");\n            this.setState({\n              status: \"checking\",\n            });\n            await checkSubmission(\n              this.props.data,\n              this.props.country,\n              this.props.countryData\n            );\n            this.setState({\n              status: \"none\",\n            });\n          }}\n        >\n          Submit\n        </button>\n      );\n    }\n    return <div class=\"mt-2\">{button}</div>;\n  }\n}\n\nasync function checkSubmission(data, country, countryData) {\n  let countries = Object.keys(data);\n  const name = document.querySelector(\"#country-name\").value;\n  const capital = document.querySelector(\"#country-capital\").value;\n  if (false && countryData.name !== name) {\n    alert(\"wrong name\");\n  } else if (false && capital != countryData.capital) {\n    alert(\"wrong capital\");\n  } else {\n    let flagMatches = await rankFlags(countries);\n    console.log(flagMatches);\n    console.log(flagMatches.slice(0, 10).map((x) => x.name));\n    console.log(flagMatches.slice(0, 10).map((x) => x.name));\n    let isInTopN = flagMatches\n      .slice(0, 4)\n      .map((x) => x.name)\n      .includes(country);\n\n    let countryFlagToShow = isInTopN ? country : flagMatches[0].name;\n    if (\n      flagMatches\n        .slice(0, 4)\n        .map((x) => x.name)\n        .includes(country)\n    ) {\n      alert(\"great job!\");\n    } else {\n      alert(\"wrong flag\");\n    }\n    render(\n      <img src={`/data/${countryFlagToShow}/flag.svg`} />,\n      document.querySelector(\"#flag-target\")\n    );\n  }\n}\n\nasync function main() {\n  // // draw the svg onto a canvas\n  // let blurredOriginal = await getBlurredCanvas({\n  //   svg: `/data/Australia/flag.svg`,\n  //   blurRadius: 50,\n  // });\n  // blurredOriginal.id = \"orig-canvas\";\n  // document.body.append(blurredOriginal);\n\n  let cr = await fetch(\"/data/countries.json\");\n  let countries = await cr.json();\n  let r = await fetch(\"/colors.json\");\n  let content = await r.json();\n  let country = pickCountry(content);\n  // let country = \"Australia\";\n  let colors = content[country];\n\n  let img = new Image();\n  img.src = `/data/${country}/flag.svg`;\n\n  img.onload = () => {\n    let height = img.height;\n    let width = img.width;\n    let goalHeight = 150;\n    let scale = goalHeight / height;\n\n    height = height * scale;\n    width = width * scale;\n\n    // console.log(heihgt * )\n    render(\n      <div class=\"flex justify-center flex-col items-center\">\n        <img class=\"noselect w-60\" src={`/data/${country}/outline.svg`} />\n        <div class=\"w-full flex items-center flex-col px-4\">\n          <div class=\"mb-2 w-full\">\n            <span class=\"font-bold block\">Name</span>\n            <input\n              class=\"mt-2 input input-bordered input-primary w-full\"\n              type=\"text\"\n              id=\"country-name\"\n            />\n          </div>\n          <div class=\"mb-2 w-full\">\n            <span class=\"font-bold block\">Capital</span>\n            <input\n              class=\"mt-2 input input-bordered input-primary w-full\"\n              type=\"text\"\n              id=\"country-capital\"\n            />\n          </div>\n        </div>\n        <div class=\"w-full\">\n          <span class=\"px-4 font-bold block\">The Flag</span>\n        </div>\n        <div>\n          {flagDrawer({\n            width: width,\n            height: height,\n            colors: colors,\n          })}\n        </div>\n        <Checker\n          data={content}\n          country={country}\n          countryData={countries[country]}\n        />\n        {/* <img src={`/data/${country}/flag.svg`} /> */}\n      </div>,\n      container\n    );\n  };\n}\n\nmain();\n"],
  "mappings": "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",
  "names": ["i", "w", "h", "a", "b", "r", "g", "d", "j", "c", "self", "v", "compareImages", "slice", "options", "vnodeId", "isValidElement", "rerenderQueue", "prevDebounce", "i", "EMPTY_OBJ", "EMPTY_ARR", "IS_NON_DIMENSIONAL", "assign", "obj", "props", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "__h", "constructor", "__v", "Fragment", "props", "children", "Component", "context", "this", "getDomSibling", "vnode", "childIndex", "__", "__k", "indexOf", "sibling", "length", "__e", "type", "updateParentDomPointers", "i", "child", "__c", "base", "enqueueRender", "c", "__d", "rerenderQueue", "push", "process", "prevDebounce", "options", "debounceRendering", "setTimeout", "queue", "__r", "sort", "a", "b", "__v", "__b", "some", "component", "commitQueue", "oldVNode", "oldDom", "parentDom", "__P", "assign", "diff", "ownerSVGElement", "__h", "commitRoot", "diffChildren", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "isSvg", "excessDomChildren", "isHydrating", "j", "childVNode", "newDom", "firstChildDom", "refs", "oldChildren", "EMPTY_ARR", "oldChildrenLength", "createVNode", "Array", "isArray", "key", "ref", "EMPTY_OBJ", "reorderChildren", "placeChild", "parentNode", "unmount", "applyRef", "tmp", "placeChild", "parentDom", "childVNode", "oldVNode", "oldChildren", "newDom", "oldDom", "nextDom", "sibDom", "j", "__d", "parentNode", "outer", "appendChild", "nextSibling", "length", "insertBefore", "diffProps", "dom", "newProps", "oldProps", "isSvg", "hydrate", "i", "setProperty", "setStyle", "style", "key", "value", "IS_NON_DIMENSIONAL", "test", "name", "oldValue", "useCapture", "o", "cssText", "replace", "toLowerCase", "slice", "l", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "indexOf", "removeAttribute", "setAttribute", "this", "type", "options", "event", "diff", "newVNode", "globalContext", "excessDomChildren", "commitQueue", "isHydrating", "tmp", "c", "isNew", "oldState", "snapshot", "clearProcessingException", "provider", "componentContext", "renderHook", "count", "renderResult", "newType", "constructor", "__h", "__e", "props", "contextType", "__c", "__", "__E", "prototype", "render", "Component", "doRender", "sub", "state", "context", "_sb", "__s", "getDerivedStateFromProps", "assign", "componentWillMount", "componentDidMount", "push", "componentWillReceiveProps", "shouldComponentUpdate", "__v", "__k", "forEach", "vnode", "componentWillUpdate", "componentDidUpdate", "__P", "__r", "getChildContext", "getSnapshotBeforeUpdate", "Fragment", "children", "diffChildren", "Array", "isArray", "base", "diffElementNodes", "diffed", "commitRoot", "root", "some", "cb", "call", "child", "oldHtml", "newHtml", "nodeType", "localName", "document", "createTextNode", "createElementNS", "createElement", "is", "data", "childNodes", "EMPTY_OBJ", "dangerouslySetInnerHTML", "attributes", "__html", "innerHTML", "getDomSibling", "removeNode", "checked", "applyRef", "ref", "current", "unmount", "parentVNode", "skipRemove", "r", "componentWillUnmount", "replaceNode", "ownerSVGElement", "firstChild", "slice", "EMPTY_ARR", "options", "__e", "error", "vnode", "oldVNode", "errorInfo", "component", "ctor", "handled", "__", "__c", "constructor", "getDerivedStateFromError", "setState", "__d", "componentDidCatch", "__E", "e", "vnodeId", "isValidElement", "Component", "prototype", "update", "callback", "s", "this", "__s", "state", "assign", "props", "__v", "_sb", "push", "enqueueRender", "forceUpdate", "render", "Fragment", "rerenderQueue", "process", "__r", "i", "options", "e", "compareImages", "i", "a", "b", "r"]
}
